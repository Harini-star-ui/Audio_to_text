from vosk import Model, KaldiRecognizer
import wave
import json
from pydub import AudioSegment

MODEL_PATH = "vosk-model-small-en-us-0.15"

def convert_to_wav(input_file, output_file="converted.wav"):
    """ Converts any audio file to a Vosk-compatible WAV format. """
    audio = AudioSegment.from_file(input_file)
    audio = audio.set_channels(1).set_frame_rate(16000).set_sample_width(2)  # Mono, 16-bit PCM
    audio.export(output_file, format="wav")
    return output_file

def transcribe_audio(file_path):
    """ Transcribes a WAV file using Vosk. """
    model = Model(MODEL_PATH)
    
    wf = wave.open(file_path, "rb")
    if wf.getnchannels() != 1 or wf.getsampwidth() != 2 or wf.getcomptype() != "NONE":
        raise ValueError("Audio file must be WAV format with 16-bit PCM and mono channel.")

    recognizer = KaldiRecognizer(model, wf.getframerate())

    result_text = ""
    while True:
        data = wf.readframes(4000)
        if len(data) == 0:
            break
        if recognizer.AcceptWaveform(data):
            result = json.loads(recognizer.Result())
            result_text += result["text"] + " "

    # Finalizing transcription
    final_result = json.loads(recognizer.FinalResult())
    result_text += final_result["text"]
    
    return result_text.strip()

# Example Usage
input_audio = "your_audio.mp3"  # Can be MP3, WAV, etc.
wav_file = convert_to_wav(input_audio)  # Ensure it's a valid WAV file
text = transcribe_audio(wav_file)
print("Transcribed Text:", text)
